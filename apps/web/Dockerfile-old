# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install pnpm
RUN npm install -g pnpm

# Copy source code
COPY apps/web/ ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Build the application
RUN pnpm run build

# Production stage
FROM nginx:alpine AS production

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY apps/web/nginx.conf /etc/nginx/conf.d/default.conf

# Create non-root user and adjust permissions
RUN addgroup -g 1001 -S ticketz \
  && adduser -S -G ticketz -u 1001 ticketz \
  && chown -R ticketz:ticketz /usr/share/nginx/html \
  && chown -R ticketz:ticketz /var/cache/nginx \
  && chown -R ticketz:ticketz /var/log/nginx \
  && chown -R ticketz:ticketz /etc/nginx/conf.d \
  && touch /var/run/nginx.pid \
  && chown ticketz:ticketz /var/run/nginx.pid

USER ticketz

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
