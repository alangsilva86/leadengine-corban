server {
  listen 80;
  server_name localhost;
  root /usr/share/nginx/html;
  index index.html;

  resolver 127.0.0.11 ipv6=off valid=30s;

  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

  # SPA
  location / {
    try_files $uri $uri/ /index.html;
    expires -1;
    add_header Cache-Control "no-cache, must-revalidate" always;
  }

  # Assets estáticos
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # ===== PROXY PARA A API (porta 4003) =====
  # Proxy TUDO que começa com /api/ mantendo o path completo
  location /api/ {
    proxy_pass http://api:4003;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # WebSocket (socket.io)
  location /socket.io/ {
    proxy_pass http://api:4003/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  error_page 404 /index.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html { root /usr/share/nginx/html; }
}
