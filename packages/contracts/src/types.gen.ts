/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/tickets/{ticketId}/messages": {
    /** Enfileira uma nova mensagem para um ticket existente */
    post: operations["createTicketMessage"];
  };
  "/contacts/{contactId}/messages": {
    /** Enfileira uma nova mensagem para um contato específico */
    post: operations["createContactMessage"];
  };
  "/integrations/whatsapp/instances/{instanceId}/messages": {
    /** Enfileira uma nova mensagem para envio ad-hoc via instância WhatsApp */
    post: operations["createInstanceMessage"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    MessagePayload: {
      /**
       * @default text
       * @enum {string}
       */
      type?: "text" | "image" | "document" | "audio" | "video";
      /** @description Conteúdo textual da mensagem */
      text?: string;
      /** Format: uri */
      mediaUrl?: string;
      caption?: string;
      mimeType?: string;
      fileName?: string;
      previewUrl?: boolean;
    };
    SendMessageByTicketRequest: {
      /** @description Identificador opcional da instância do WhatsApp */
      instanceId?: string;
      payload: components["schemas"]["MessagePayload"];
      /** @description Chave utilizada para deduplicação de requisições */
      idempotencyKey?: string;
    };
    SendMessageByContactRequest: components["schemas"]["SendMessageByTicketRequest"] & {
      /** @description Número de telefone do contato */
      to: string;
    };
    SendMessageByInstanceRequest: {
      /** @description Número de telefone do destinatário */
      to: string;
      payload: components["schemas"]["MessagePayload"];
      /** @description Chave utilizada para deduplicação de requisições */
      idempotencyKey?: string;
    };
    OutboundMessageError: {
      message: string;
      code?: string;
      status?: number;
      requestId?: string;
    };
    OutboundMessageResponse: {
      /** @constant */
      queued: true;
      ticketId: string;
      messageId: string;
      status: string;
      externalId: string | null;
      error: components["schemas"]["OutboundMessageError"] | null;
    };
    ErrorResponse: {
      /** @constant */
      success: false;
      error: {
        code: string;
        message: string;
        /** @description Informações adicionais sobre o erro */
        details?: unknown;
        [key: string]: unknown;
      };
    };
    ValidationErrorIssue: {
      code: string;
      message: string;
      path?: string[];
      [key: string]: unknown;
    };
    ValidationErrorResponse: components["schemas"]["ErrorResponse"] & {
      error?: {
        /** @enum {string} */
        code: "VALIDATION_ERROR";
        message: string;
        details: components["schemas"]["ValidationErrorIssue"][];
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Enfileira uma nova mensagem para um ticket existente */
  createTicketMessage: {
    parameters: {
      path: {
        ticketId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendMessageByTicketRequest"];
      };
    };
    responses: {
      /** @description Mensagem enfileirada com sucesso */
      202: {
        content: {
          "application/json": components["schemas"]["OutboundMessageResponse"];
        };
      };
      /** @description Ticket ou instância não encontrada */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Instância desconectada */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Erro de validação na requisição */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationErrorResponse"];
        };
      };
    };
  };
  /** Enfileira uma nova mensagem para um contato específico */
  createContactMessage: {
    parameters: {
      path: {
        contactId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendMessageByContactRequest"];
      };
    };
    responses: {
      /** @description Mensagem enfileirada com sucesso */
      202: {
        content: {
          "application/json": components["schemas"]["OutboundMessageResponse"];
        };
      };
      /** @description Contato ou instância não encontrada */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Instância desconectada */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Erro de validação na requisição */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationErrorResponse"];
        };
      };
    };
  };
  /** Enfileira uma nova mensagem para envio ad-hoc via instância WhatsApp */
  createInstanceMessage: {
    parameters: {
      path: {
        instanceId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendMessageByInstanceRequest"];
      };
    };
    responses: {
      /** @description Mensagem enfileirada com sucesso */
      202: {
        content: {
          "application/json": components["schemas"]["OutboundMessageResponse"];
        };
      };
      /** @description Instância não encontrada */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Instância desconectada */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Erro de validação na requisição */
      422: {
        content: {
          "application/json": components["schemas"]["ValidationErrorResponse"];
        };
      };
    };
  };
}
